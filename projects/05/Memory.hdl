// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Not(in=address[14], out=notaddress14);
    And(a=load, b=notaddress14, out=load16k);
    RAM16K(in=in, load=load16k, address=address[0..13], out=out16k);
    And16-1(a=out16k, b=notaddress14, out=result16k);
    Nor(a=notaddress14, b=address[13], out=nor8k);
    And(a=load, b=nor8k, out=load8k);
    Screen(in=in, load=load8k, address=address[0..12], out=out8k);
    And16-1(a=out8k, b=nor8k, out=result8k);
    And(a=address[14], b=address[13], out=and1);
    Or8Way(in=address[0..7], out=or07);
    Or8Way(in[0..4]=address[8..12], out=or812);
    Nor(a=or07, b=or812, out=nor1);
    And(a=and1, b=nor1, out=and2);
    Keyboard(out=out1);
    And16-1(a=out1, b=and2, out=result1);
    Or16(a=result16k, b=result8k, out=out168);
    Or16(a=out168, b=result1, out=out);
}