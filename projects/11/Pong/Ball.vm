function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto l55
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto l56
label l55
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label l56
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto l57
push this 4
push this 5
add
pop this 4
goto l58
label l57
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto l59
push this 7
not
if-goto l61
push this 0
push constant 4
add
pop this 0
goto l62
label l61
push this 1
push constant 4
add
pop this 1
label l62
goto l60
label l59
push this 7
not
if-goto l63
push this 0
push constant 4
sub
pop this 0
goto l64
label l63
push this 1
push constant 4
sub
pop this 1
label l64
label l60
label l58
push this 8
not
if-goto l65
push this 7
not
if-goto l67
push this 1
push constant 4
add
pop this 1
goto l68
label l67
push this 0
push constant 4
add
pop this 0
label l68
goto l66
label l65
push this 7
not
if-goto l69
push this 1
push constant 4
sub
pop this 1
goto l70
label l69
push this 0
push constant 4
sub
pop this 0
label l70
label l66
push this 0
push this 10
gt
not
not
if-goto l71
push constant 1
pop this 14
push this 10
pop this 0
goto l72
label l71
label l72
push this 0
push this 11
lt
not
not
if-goto l73
push constant 2
pop this 14
push this 11
pop this 0
goto l74
label l73
label l74
push this 1
push this 12
gt
not
not
if-goto l75
push constant 3
pop this 14
push this 12
pop this 1
goto l76
label l75
label l76
push this 1
push this 13
lt
not
not
if-goto l77
push constant 4
pop this 14
push this 13
pop this 1
goto l78
label l77
label l78
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto l79
push constant 10
pop local 4
goto l80
label l79
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto l81
push constant 20
pop local 4
goto l82
label l81
push constant 5
pop local 4
label l82
label l80
push this 14
push constant 1
eq
not
if-goto l83
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto l84
label l83
push this 14
push constant 2
eq
not
if-goto l85
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto l86
label l85
push this 14
push constant 3
eq
not
if-goto l87
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto l88
label l87
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label l88
label l86
label l84
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
