// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[12..13], a=addressa, b=addressb, c=addressc, d=addressd);
    And(a=load, b=addressa, out=loada);
    And(a=load, b=addressb, out=loadb);
    And(a=load, b=addressc, out=loadc);
    And(a=load, b=addressd, out=loadd);
    RAM4K(in=in, load=loada, address=address[0..11], out=ram1);
    RAM4K(in=in, load=loadb, address=address[0..11], out=ram2);
    RAM4K(in=in, load=loadc, address=address[0..11], out=ram3);
    RAM4K(in=in, load=loadd, address=address[0..11], out=ram4);
    Mux4Way16(a=ram1, b=ram2, c=ram3, d=ram4, sel=address[12..13], out=out);
}